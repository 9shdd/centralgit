FOR ANSIBLE DOWLOAD PACKAGE AND DEPENDENCIES
https://rpmfind.net/linux/rpm2html/search.php?query=ansible
https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/

ANSIBLE DOWNLOAD LINK https://rpmfind.net/linux/epel/9/Everything/s390x/Packages/a/ansible-7.7.0-1.el9.noarch.rpm

Installing Ansible on Windows:
Ansible can be installed on Windows using the Windows Subsystem for Linux (WSL) feature.First, you'll need to enable the WSL feature by running the following command in PowerShell:

dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart

After enabling WSL, you'll need to install a Linux distribution, such as Ubuntu, from the Microsoft Store. Once the distribution is installed, you can use the Linux terminal to install Ansible using apt-get.

sudo apt-add-repository ppa:ansible/ansible
sudo apt-get update
sudo apt-get install ansible

Installing Ansible on Ubuntu:
Ansible can be installed on Ubuntu using the apt package manager. First, you'll need to add the Ansible PPA to your system by running the following command:

sudo apt-add-repository ppa:ansible/ansible

Next, update the package list and install Ansible using apt-get:

sudo apt-get update
sudo apt-get install ansible

Installing Ansible on CentOS:
Ansible can be installed on CentOS using the yum package manager. First, you'll need to add the Ansible repository to your system by running the following command:

sudo yum install epel-release

Next, install Ansible using yum:

sudo yum install ansible

ANSIBLE DEFAULTS CONFIG FILE https://gist.github.com/alivx/2a4ca3e577ead4bd38d247c258e6513b

==========================================================================================
First thing after installation ansible, create the user in server and nodes then do the following changes
To get the ssh and scp/rsync
1 go to this path and change the config as below #vi /etc/ssh/sshd_config
2 # Authentication:
    PermitRootLogin prohibit-password
  # To disable tunneled clear text passwords, change to no here!
    PasswordAuthentication yes
  # some PAM modules and threads)
    KbdInteractiveAuthentication no
3 login the user(ansible in my case) then generate the ssh key(#ssh-keygen) and then
got the this location (#cd .ssh/) ans check for the id_rsa.pub) and share this public key (#ssh-copy-id username@private-ip) with the remote machine once
NOTE: Make sure these pulic keys should be share user to user or you want to with whom
///////////////////////////////////////////////////////////////////////////////////////////////////

commands........
#ansible --list nodes To check all connected nodes
1. Ad-hoc commands... use -a
NOTE: idempotancy is present means overrite the task, again and again does the task
#ansible grpname -a 'ls or ls -a or pwd' or #ansible demo[0] -a 'useradd malik'
#ansible grpname -a 'sudo yum install httpd -y'  or #ansible all -ba 'yum install httpd -y'  [a for argument, b for become, sudo basically]

2. modules........ use -m
NOTE: idempotancy is present means no overrite or repeat any task, it tells this/that already done or installed or created
#ansible demo -m setup  or # ansible demo -m setup -a 'filter=*ipv4*'  [this setup module basically tells the current configuration]
#ansible demo -b -m yum -a 'pkg=httpd state=present or install'     [present for install]
#ansible demo -b -m yum -a 'pkg=httpd state=absent'               [absent for remove]
#ansible demo -b -m yum -a 'pkg=httpd state=latest'              [latest for update]
#ansible demo -b -m service -a 'name=httpd state=started'      [started for service start]
#ansible demo -b -m user -a 'name=malik'
#ansible demo -b -m user -a 'name=malik state=absent'        [absent for user remove]
#ansible demo -b -m copy -a 'src=testfile dest=/tmp'

3. Playbook........
#target which is mandatory in every playbook like in chef as well

- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  gather_facts: yes   #this line is not mandatory btw for eg:
 TASK [Gathering Facts] ********* ok: [172.31.7.171]

---#this is a task playbook/file 
- hosts: demo
  user: ansible
  become: yes
  connection: ssh

  tasks:   #this is task how to define
    - name: install apache2 # this is the message 
      action: apt name=apache2 state=present


---#this is task and variable and handlers(means if pkg is availble then do started aslo) playbook
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  gather_facts: yes

  vars: 
  - pkgname: apache2
  
  tasks:
    - name: install apache2 # this is the message 
      action: apt name='{{pkgname}}' state=present


--- # playbook for handers
#target
- hosts: demo
  user: ansible
  become: yes
  connection: ssh

  tasks:
    - name: install apache2 on ubuntu# this is the message 
      action: apt name=apache2 state=present
      notify: restart apache2

  handlers:
    - name: restart apache2 
      action: service name=apache2 state=restarted


--- # playbook for loop
#target
- hosts: demo
  user: ansible
  become: yes
  connection: ssh

  tasks:
    - name: add the list of users on nodes
      user: name='{{item}}' state=present
      with_items:
        - hato
        - bacho 
        - hato_bacho   


NOTE: if changed is zero comes again and again means already install/no overrrite 'idempotancy'
PLAY RECAP ***********************************************************************************************************************************************************
172.31.7.171               : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0
