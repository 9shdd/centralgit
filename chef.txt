downloading link for chef server
 #wget https://packages.chef.io/files/stable/chef-workstation/0.4.2/el/7/chef-workstation-0.4.2-1.el6.x86_64.rpm
  #ls
  #rpm -ivh chef-workstation-0.4.2-1.el6.x86_64.rpm
  #which chef

1. make the directory with the name of chef for best practice
mkdir chef
then go inside this this directoy and then make folder with the name of cookbooks
mkdir cookbooks
then go inside this folder
generate the 1st cookbook eg. test-cookbook
chef generate cookbook <give-name-of-cookbook>
then go to insdide this generated cookbook
and create 1st recipe
chef generate recipe <give-recipe-name>
then write ruby code inside this created recipe
eg. httpd installation

execute 'httpd' do
  command 'yum install httpd -y'
  action :run
end

file '/var/www/html/index.html' do
  content 'this is the test web app for chef server'
  action :create
end

service 'httpd' do
  action :start
or action [:start,:enable]
end

##########for attiributes write below ruby code ######
file '/basicinfo' do
 content "This is to get Attributes
 HOSTNAME: #{node['hostname']}
 IPADDRESS: #{node['ipaddress']}
 CPU: #{node['cpu']['0']['mhz']}
 MEMORY: #{node['memory']['total']}"
 owner 'root'
 group 'root'
action :create
end

###this is ruby code for git by chef server ####
Note- replace this path [cwd git_repo_dir] your init git direcroty.
# Recipe to interact with an existing Git repository

# Define variables for Git repository URL and directory
git_repo_url = 'https://github.com/yourusername/your-repo.git'
git_repo_dir = '/root/git'

# Verify Git repository path
execute 'verify-git-repo' do
  command 'git status'
  cwd git_repo_dir
  action :run
end

# Pull latest changes from remote repository
git git_repo_dir do
  repository git_repo_url
  action :sync
end

# Add files to Git (if necessary)
execute 'git-add' do
  command 'git add .'
  cwd git_repo_dir
  action :run
  only_if 'git status --porcelain | grep .'
end

# Commit changes (if any)
execute 'git-commit' do
  command "git commit -m 'Automated commit by Chef'"
  cwd git_repo_dir
  action :run
  only_if 'git status --porcelain | grep .'
end

# Push changes to remote repository
execute 'git-push' do
  command 'git push origin master'
  cwd git_repo_dir
  action :run
  only_if 'git status --porcelain | grep .'
end

